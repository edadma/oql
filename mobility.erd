  entity organization (organizations) {
   *id: uuid
    name: text!
    industry: text!
    phoneNumber (phone_number): text
    country: text!
    uom: text!
    enabled: bool!
    stripeCustomerId (stripe_customer_id): text
    stripeSubscriptionId (stripe_subscription_id): text
    stripeSubscriptionItemId (stripe_subscription_item_id): text
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
  }

  entity place (places) {
   *id: uuid
    station (station_id): station!
    latitude: float8!
    longitude: float8!
    address: text!
    createdAt (created_at): timestamp!
  }

  entity virtualPhoneNumber (virtual_phone_numbers) {
   *id: uuid
    digits: text!
  }

  entity station (stations) {
   *id: uuid
    organization (organization_id): organization!
    name: text!
    timezoneId (timezone_id): text!
    place (place_id): place
    color: text!
    iconUrl (icon_url): text
    markerUrl (marker_url): text
    radiusBound (radius_bound): int4
    virtualPhoneNumber (virtual_phone_number_id): virtualPhoneNumber!
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
    users: [user] (users_stations)
    vehicles: [vehicle]
    places: [place] (stations_places)
  }

  entity user (users) {
   *id: uuid
    organization (organization_id): organization!
    role: text!
    email: text!
    password: text!
    firstName (first_name): text!
    lastName (last_name): text!
    language: text!
    phoneNumber (phone_number): text!
    fcmToken (fcm_token): text
    enabled: bool!
    loginToken (login_token): text!
    lastLoginAt (last_login_at): timestamp
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
    stations: [station] (users_stations)
    vehicle: <vehicle.driver>
  }

  entity users_stations {
    user (user_id): user
    station (station_id): station
  }

  entity vehicle (vehicles) {
   *id: uuid
    driver (driver_id): user
    type: text!
    enabled: bool!
    seats: int4!
    manufacturer: text!
    model: text!
    color: text!
    licensePlate (license_plate): text!
    station (station_id): station!
    vehicleCoordinate (vehicle_coordinate_id): vehicleCoordinate
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
  }

  entity vehicleCoordinate (vehicle_coordinates) {
   *id: uuid
    vehicle (vehicle_id): vehicle!
    driver (driver_id): user
    latitude: float8!
    longitude: float8!
    altitude: float8!
    accuracy: float8!
    altitudeAccuracy (altitude_accuracy): float8!
    heading: float8!
    speed: float8!
    createdAt (created_at): timestamp!
  }

  entity customer (customers) {
   *id: uuid
    station (station_id): station!
    firstName (first_name): text
    lastName (last_name): text
    phoneNumber (phone_number): text!
    email: text
    language: text!
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
    places: [place] (customers_places)
  }

  entity customers_places {
    customer (customer_id): customer
    place (place_id): place
  }

  entity stations_places {
    station (station_id): station
    place (place_id): place
  }

  entity messageTemplate (message_templates) {
   *id: uuid
    name: text!
    enabled: bool!
    type: text!
    station (station_id): station!
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
    locales: [messageTemplateLocale]
  }

  entity messageTemplateLocale (message_template_locales) {
    *id: uuid
    messageTemplate (message_template_id): messageTemplate!
    language: text!
    template: text!
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
  }

  entity workflow (workflows) {
   *id: uuid
    station (station_id): station!
    enabled: bool!
    name: text!
    description: text
    steps: [workflowStep]
    customerRequired (customer_required): bool!
    emailRequired (email_required): bool!
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
  }

  entity workflowStep (workflow_steps) {
   *id: uuid
    workflow (workflow_id): workflow!
    name: text!
    imageRequired (image_required): bool!
    placeRequired (place_required): bool!
    place (place_id): place
    position: int4!
    messageTemplate (message_template_id): messageTemplate
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
  }

  entity trip (trips) {
   *id: uuid
    reference: text!
    state: text!
    position: int4!
    seats: int4!
    customer (customer_id): customer!
    station (station_id): station!
    workflow (workflow_id): workflow!
    vehicle (vehicle_id): vehicle
    returnTrip (return_trip_id): trip
    returnTripFor (return_trip_for_id): trip
    createdAt (created_at): timestamp!
    activatedAt (activated_at): timestamp
    scheduledFor (scheduled_for): timestamp
    confirmedAt (confirmed_at): timestamp
    notifyFor (notify_for): timestamp
    updatedAt (updated_at): timestamp
    finishedAt (finished_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
    notes: [tripNote]
    drivers: [user] (trips_drivers)
    steps: [tripStep]
  }

  entity tripNote (trip_notes) {
   *id: uuid
    content: text!
    trip (trip_id): trip!
    createdAt (created_at): timestamp!
    updatedAt (updated_at): timestamp
    createdBy (created_by): user
    updatedBy (updated_by): user
  }

  entity trips_drivers {
    trip (trip_id): trip!
    driver (driver_id): user!
  }

  entity tripStep (trip_steps) {
   *id: uuid
    trip (trip_id): trip!
    driver (driver_id): user
    name: text!
    placeRequired (place_required): bool!
    place (place_id): place
    imageRequired (image_required): bool!
    imageUrl (image_url): text
    position: int4!
    vehicle (vehicle_id): vehicle
    distance: float8
    finishedAt (finished_at): timestamp
    messageTemplate (message_template_id): messageTemplate
  }
